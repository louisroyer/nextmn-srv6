// Code generated by gen.go; DO NOT EDIT.

// Copyright 2024 Louis Royer and the NextMN-SRv6 contributors. All rights reserved.
// Use of this source code is governed by a MIT-style license that can be
// found in the LICENSE file.

package database

type procedureOrFunction struct {
	num_in int
	num_out int
	is_procedure bool
}

var procedures = map[string]procedureOrFunction{
	"insert_uplink_rule": procedureOrFunction{num_in: 5, num_out: 1, is_procedure: true},
	"insert_downlink_rule": procedureOrFunction{num_in: 4, num_out: 1, is_procedure: true},
	"enable_rule": procedureOrFunction{num_in: 1, num_out: 0, is_procedure: true},
	"disable_rule": procedureOrFunction{num_in: 1, num_out: 0, is_procedure: true},
	"delete_rule": procedureOrFunction{num_in: 1, num_out: 0, is_procedure: true},
	"get_uplink_action": procedureOrFunction{num_in: 3, num_out: 2, is_procedure: true},
	"set_uplink_action": procedureOrFunction{num_in: 4, num_out: 2, is_procedure: true},
	"get_downlink_action": procedureOrFunction{num_in: 1, num_out: 2, is_procedure: true},
	"get_rule": procedureOrFunction{num_in: 1, num_out: 0, is_procedure: false},
	"get_all_rules": procedureOrFunction{num_in: 0, num_out: 0, is_procedure: false},
}
